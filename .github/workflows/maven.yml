name: Continuous Integration - Stratify Backend

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
      name: Build
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 21
          uses: actions/setup-java@v4
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: maven
  
        - name: Build with Maven
          run: mvn -B package --file stratify/pom.xml
  integration:
    needs: build
    name: Teste de Integração
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
  
  test:
    needs: integration
    name: Testes unitários
    runs-on: ubuntu-latest

    if: |
      github.event_name == 'push' ||
      (
        github.event_name == 'pull_request' &&
        (
          startsWith(github.base_ref, 'main') ||
          startsWith(github.base_ref, 'sprint-')
        )
      )

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with Maven
        run: mvn -B test --file stratify/pom.xml
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Remote Server to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Git Pull and Deploy on Remote Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            if [ ! -d "apps/API_5SEM_BACK/" ]; then
              mkdir -p apps/API_5SEM_BACK/
            fi
            cd apps/API_5SEM_BACK/

            git checkout $(git rev-parse --abbrev-ref HEAD)
            git pull origin $(git rev-parse --abbrev-ref HEAD)

            docker stop stratify-server-container || true
            docker rm stratify-server-container || true

            docker build -t stratify-server .

            docker run -d \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -p 8080:8080 \
              --name stratify-server-container \
              stratify-server
          EOF
